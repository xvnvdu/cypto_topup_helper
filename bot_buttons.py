from aiogram.handlers import CallbackQueryHandler
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


menu_buttons = [
    [InlineKeyboardButton(text='üë®‚Äçüíª –ú–æ–π –∞–∫–∫–∞—É–Ω—Ç', callback_data='account'),
     InlineKeyboardButton(text='üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å', callback_data='topup')],
    [InlineKeyboardButton(text='üí∏ –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –Ω–∞ –∫—Ä–∏–ø—Ç–æ–∫–æ—à–µ–ª–µ–∫', callback_data='withdraw')]
        ]
menu_keyboard = InlineKeyboardMarkup(inline_keyboard=menu_buttons)

account_buttons = [
    [InlineKeyboardButton(text='üìù –ú–æ–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏', callback_data='transactions'),
    InlineKeyboardButton(text='üôã‚Äç‚ôÇÔ∏è –ü–µ—Ä–µ–≤–æ–¥ –¥—Ä—É–≥—É', callback_data='send')],
    [InlineKeyboardButton(text='‚Üê –ù–∞–∑–∞–¥', callback_data='back')]
]
account_keyboard = InlineKeyboardMarkup(inline_keyboard=account_buttons)


send_buttons = [
    [InlineKeyboardButton(text='‚Üê –ù–∞–∑–∞–¥', callback_data='account')]
]
send_keyboard = InlineKeyboardMarkup(inline_keyboard=send_buttons)

try_again_amount_keyboard = InlineKeyboardMarkup(
        inline_keyboard=[[InlineKeyboardButton(text='üôã‚Äç‚ôÇÔ∏è –ü–µ—Ä–µ–≤–æ–¥ –¥—Ä—É–≥—É', callback_data='send')]]
    )
try_again_id_keyboard = InlineKeyboardMarkup(
        inline_keyboard=[[InlineKeyboardButton(text='ü•∑ –í–≤–µ—Å—Ç–∏ ID', callback_data='choose_id')]]
    )
step_back_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[[InlineKeyboardButton(text='‚Üê –ò–∑–º–µ–Ω–∏—Ç—å —Å—É–º–º—É', callback_data='send')]]
)
confirm_sending_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[[InlineKeyboardButton(text='‚ùå –ù–µ—Ç', callback_data='send'),
                      InlineKeyboardButton(text='‚úÖ –î–∞', callback_data='sending_confirmed')]]
)
skip_message_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[[InlineKeyboardButton(text='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å ‚Üí', callback_data='confirm_sending')]]
)


zero_transactions_buttons = [
    [InlineKeyboardButton(text='ü§ë –ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é', callback_data='topup')],
    [InlineKeyboardButton(text='‚Üê –ù–∞–∑–∞–¥', callback_data='account')]
]
zero_transactions_keyboard = InlineKeyboardMarkup(inline_keyboard=zero_transactions_buttons)


payment_buttons = [
    [InlineKeyboardButton(text='üü£ –ÆKassa', callback_data='YK')],
    [InlineKeyboardButton(text='‚≠êÔ∏è Telegram Stars', callback_data='stars')],
    [InlineKeyboardButton(text='‚Üê –ù–∞–∑–∞–¥', callback_data='back')]
        ]
payment_keyboard = InlineKeyboardMarkup(inline_keyboard=payment_buttons)


withdraw_buttons = [
    [InlineKeyboardButton(text='‚Üê –ù–∞–∑–∞–¥', callback_data='back')]
]
withdraw_keyboard = InlineKeyboardMarkup(inline_keyboard=withdraw_buttons)


stars_buttons = [
        [InlineKeyboardButton(text='100‚ÇΩ (63 ‚≠êÔ∏è)', callback_data='100_in_stars'),
         InlineKeyboardButton(text='200‚ÇΩ (125 ‚≠êÔ∏è)', callback_data='200_in_stars')],
        [InlineKeyboardButton(text='400‚ÇΩ (250 ‚≠êÔ∏è)', callback_data='400_in_stars'),
         InlineKeyboardButton(text='500‚ÇΩ (313 ‚≠êÔ∏è)', callback_data='500_in_stars')],
        [InlineKeyboardButton(text='‚Üê –ù–∞–∑–∞–¥', callback_data='topup')]
    ]
stars_keyboard = InlineKeyboardMarkup(inline_keyboard=stars_buttons)


yk_payment_buttons = [
        [InlineKeyboardButton(text='100‚ÇΩ üíµ', callback_data='100_in_rub'),
         InlineKeyboardButton(text='200‚ÇΩ üíµ', callback_data='200_in_rub')],
        [InlineKeyboardButton(text='400‚ÇΩ üíµ', callback_data='400_in_rub'),
         InlineKeyboardButton(text='500‚ÇΩ üíµ', callback_data='500_in_rub')],
        [InlineKeyboardButton(text='‚Üê –ù–∞–∑–∞–¥', callback_data='topup')]
    ]
yk_payment_keyboard = InlineKeyboardMarkup(inline_keyboard=yk_payment_buttons)


async def log_buttons(call: CallbackQueryHandler, page_text, current_page: int, total_pages: int):
    trx_log_buttons = [[InlineKeyboardButton(text='‚Üê –ù–∞–∑–∞–¥', callback_data='account')]]
    if current_page == 0 and total_pages > 1:
        trx_log_buttons = [
            [InlineKeyboardButton(text=' ', callback_data='None'),
            InlineKeyboardButton(text='>', callback_data='next_page')],
            [InlineKeyboardButton(text='‚Üê –ù–∞–∑–∞–¥', callback_data='account')]
        ]
    elif 0 < current_page < total_pages - 1:
        trx_log_buttons = [
            [InlineKeyboardButton(text='<', callback_data='prev_page'),
             InlineKeyboardButton(text='>', callback_data='next_page')],
            [InlineKeyboardButton(text='‚Üê –ù–∞–∑–∞–¥', callback_data='account')]
        ]
    elif total_pages == 1:
        trx_log_buttons = [
            [InlineKeyboardButton(text='‚Üê –ù–∞–∑–∞–¥', callback_data='account')]
        ]
    elif current_page == total_pages - 1:
        trx_log_buttons = [
            [InlineKeyboardButton(text='<', callback_data='prev_page'),
            InlineKeyboardButton(text=' ', callback_data='None')],
            [InlineKeyboardButton(text='‚Üê –ù–∞–∑–∞–¥', callback_data='account')]
        ]

    trx_log_keyboard = InlineKeyboardMarkup(inline_keyboard=trx_log_buttons)
    await call.message.edit_text(text=page_text, parse_mode='HTML', reply_markup=trx_log_keyboard)